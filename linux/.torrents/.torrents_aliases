# export TORRENT_URL="https://thepiratebay.party/search"

get_torrent_metadata() {
    torrent="$1"

}

download_torrent() {
    torrent="$1"
    transmission-cli "$torrent"
}

torrent() {
    TORRENT_URL="https://thepiratebay.party/search"

    [[ $1 ]] && q="$*" || read -p "Enter Search Query: " q
    echo "$TORRENT_URL/$q" | sed 's/ /%20/g'

    local page="$(wget -qO- "$TORRENT_URL/$q" | sed 's@+@ @g;s@%@\\x@g' | xargs -0 printf "%b")"

    local magnet_links=()
    local info_links=()

    info_links=("$(echo "$page" | grep '<a href="[^"]*"' | grep '/torrent/' | cut -d'"' -f2)")
    magnet_links=("$(echo "$page" | grep magnet | grep -v '<meta' | sed 's/href="magnet/\nmagnet/g' | grep magnet | cut -d\" -f1 | awk -F\& '{print $2 "|" $1}' | tr "+" " " | sed 's/dn=//g')")

    local state_file

    state_file=$(mktemp)
    echo 0 >"$state_file"

    selection=$(
        printf '%s\n' "${magnet_links[@]}" |
            fzf \
                --preview-window=down,1,border-top \
                --preview '
                if [[ $(cat '"$state_file"') -eq 1 ]]; then
                    echo "INFO MODE for: {}"
                else
                    echo "DOWNLOAD_MODE for: {}"
                fi
            ' \
                --bind "ctrl-i:execute-silent(
                if [[ \$(cat $state_file) -eq 0 ]]; then
                    echo 1 > $state_file
                else
                    echo 0 > $state_file
                fi
            )+reload(if [[ \$(cat $state_file) -eq 1 ]]; then echo \"${info_links[@]}\"; else echo \"${magnet_links[@]}\"; fi)+refresh-preview"
    )

    local TORRENT_INFO_MODE
    TORRENT_INFO_MODE=$(cat "$state_file")
    rm -f "$state_file"

    [[ $selection ]] || return 1

    if [[ $TORRENT_INFO_MODE -eq 1 ]]; then
        get_torrent_metadata "$selection"
    else
        download_torrent "$selection"
    fi
}
