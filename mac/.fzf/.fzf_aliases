FZF_CLIP_CMD="pbcopy"

export FZF_DEFAULT_OPTS="--color=query:#ff8700"

# open fzf in edit mode
fzfe() {
    local selection
    selection=$(
        find . -type f -o -type d | fzf \
            --multi \
            --bind "ctrl-s:toggle+down" \
            --bind "ctrl-x:execute(
        sh -c '
          echo -n \"Delete selected files? (y/n): \";
          read -r answer < /dev/tty;
          if [[ \$answer == [Yy]* ]]; then
            for f in \"\$@\"; do
              rm -rf -- \"\$f\" || echo \"Failed to delete \$f\";
            done
            echo \"Deletion complete.\";
          else
            echo \"Aborted deletion.\";
          fi
        ' sh {+}
      )+reload(find . -type f -o -type d)"
    )

    if [[ -n $selection ]]; then
        if [[ -f $selection ]]; then
            z "$(dirname "$selection")"
        else
            z "$selection"
        fi
    fi
}

# open fzf in code mode
fzfc() {
    local cwd="${1:-.}"
    local selection file line
    local default_editor="${DEFAULT_EDITOR:-vscode}"

    selection=$(rg --glob '!.git/*' \
        --column --hidden --line-number --no-heading --color=always "" "$cwd" | fzf --ansi --tiebreak=length --delimiter=: --preview='bat --style=numbers --color=always --highlight-line {2} {1}')

    [ -z "$selection" ] && return 1

    file=$(echo "$selection" | cut -d: -f1)
    line=$(echo "$selection" | cut -d: -f2)

    case "$default_editor" in
    vscode | code)
        code -g "$file:$line"
        ;;
    vim)
        vim "+${line}" "$file"
        ;;
    *)
        nano "+${line}" "$file"
        ;;
    esac
}

fzfh() {
    local history_path="${1:-$HISTFILE}"

    if [ ! -f "$history_path" ]; then
        echo "History file not found: $history_path" >&2
        return 1
    fi

    local selection
    # Use fzf to select a line from history file
    selection=$(cat "$history_path" | fzf --height=60% --border --prompt="History> ")

    if [ -z "$selection" ]; then
        echo "No selection made." >&2
        return 1
    fi

    if [ -n "$ZSH_VERSION" ]; then
        print -z -- "$selection"
    else
        history -s "$selection"
    fi
}

fzfg() {
    # search in github changes
}
