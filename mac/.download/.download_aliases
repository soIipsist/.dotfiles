# downloader options
export DOWNLOADS_DB_PATH="$HOME/scripts/downloads.db"
export DOWNLOADS_DIRECTORY="$HOME/videos"
export DOWNLOADS_FILENAME="downloads.txt"
export DOWNLOADER_TYPE="ytdlp_video"
export DOWNLOADER_KEYS="downloader_type,downloader_path"
export DOWNLOAD_KEYS="url,downloader,download_status"

download() {
    run_venv_script "downloader.py" download "$@"
}

downloaders() {
    run_venv_script "downloader.py" downloaders -t "" "$@"
}

download_all() {
    downloads_path="$1"

    if [ $# -gt 1 ]; then
        shift # Remove the downloads path
        extra_args=("$@")
    else
        extra_args=()
    fi

    if [ ! -f "$downloads_path" ]; then
        echo "Downloads path $downloads_path not found."
        echo "Usage: download_all <downloads_path.txt>"
        return 1
    fi

    while IFS= read -r line; do
        if [[ -n "$line" ]]; then
            cmd=$(printf '%q ' "${extra_args[@]}")
            run_in_tmux_session "source $HOME/.zshrc; DOWNLOADS_DIRECTORY=\"$DOWNLOADS_DIRECTORY\"; download \"${line}\" "$cmd""
        fi
    done <"$downloads_path"

}

_download_completions() {

    if [ -z "$SCRIPTS_DIRECTORY" ]; then
        if [ -z "$GIT_DOTFILES_DIRECTORY" ]; then
            GIT_DOTFILES_DIRECTORY="$HOME"
        fi
        SCRIPTS_DIRECTORY="$GIT_DOTFILES_DIRECTORY/scripts"
    fi

    local options=$(python -c "import os; from importlib import import_module; os.chdir('$SCRIPTS_DIRECTORY'); module = import_module('downloader'); func = getattr(module, 'get_downloader_names'); downloader_names = func(); print(' '.join(downloader_names));")
    local cur="${COMP_WORDS[COMP_CWORD]}"
    local prev="${COMP_WORDS[COMP_CWORD - 1]}"

    if [[ "$prev" == "-t" ]]; then
        COMPREPLY=($(compgen -W "${options[*]}" -- "$cur"))
    fi
}

complete -F _download_completions download
complete -F _download_completions download_all
